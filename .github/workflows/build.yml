name: Build release image

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'information'
        type: choice
        options:
          - information
          - debug
          - warning
          - critical
      tags:
        description: 'Purpose of Run This Workflow?'
        required: true
        type: string
  push:
    branches:
      - "main"

jobs:
  print-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Print the purpose of run
        run: echo  ${{ inputs.tags }} purpose
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set Environment
        uses: c-py/action-dotenv-to-setenv@v5
        id: source-env
        with:
          env-file: env/.env  
      - name: Echo Squid Version from env file
        run: | 
          echo ${{ steps.source-env.outputs.squid_version }} >> "$GITHUB_ENV"
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "lferrarotti74/bugbuster-builder"
      - name: Build and push x86 & ARM64 image
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          build-args: VERSION=${{ env.SQUID_VERSION }}
          platforms: linux/amd64,linux/amd64/v2,linux/amd64/v3,linux/amd64/v4,linux/i386,linux/arm64
          provenance: mode=max
          sbom: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/squid-proxy:${{ env.SQUID_VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/squid-proxy:latest
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}
