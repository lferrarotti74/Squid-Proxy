name: Unit Test

on:
  # Run tests on dev branch pushes (active development)
  push:
    branches: [dev]

  # Run tests on PRs to both branches with smart exclusions
  pull_request:
    branches: [dev, main]
    paths-ignore:
      # Skip tests for Dependabot workflow updates
      - '.github/workflows/**'
      
      # Documentation files
      - '*.md'
      - 'docs/**'
      - '.github/**/*.md'
      
      # License and legal files
      - 'LICENSE*'
      - 'COPYING*'
      - 'COPYRIGHT*'
      
      # Git and GitHub specific files
      - '.gitignore'
      - '.gitattributes'
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/PULL_REQUEST_TEMPLATE/**'
      - '.github/dependabot.yml'
      - '.github/CODEOWNERS'
      
      # Editor and IDE files
      - '.vscode/**'
      - '.idea/**'
      - '*.swp'
      - '*.swo'
      - '*~'
      
      # Package manager files that don't affect builds
      - '.npmignore'
      - '.dockerignore'
      - '.eslintignore'
      - '.prettierignore'
      
      # CI/CD configuration for other systems
      - '.travis.yml'
      - '.circleci/**'
      - 'Jenkinsfile'
      - '.gitlab-ci.yml'
      
      # Common non-code files
      - '*.txt'
      - 'CHANGELOG*'

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.2.0

      - name: Set Environment
        uses: c-py/action-dotenv-to-setenv@925b5d99a3f1e4bd7b4e9928be4e2491e29891d9 # v5
        id: source-env
        with:
          env-file: env/.env
          
      - name: Echo Squid Version from env file
        run: |
          echo ${{ steps.source-env.outputs.squid_version }} >> "$GITHUB_ENV"

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Build test image
        run: |
          docker build \
            --build-arg VERSION=${{ env.SQUID_VERSION }} \
            --tag squid-proxy:latest \
            .

      - name: Install BATS
        run: |
          sudo apt-get update
          sudo apt-get install -y bats

      - name: Install jq for JSON validation
        run: |
          sudo apt-get install -y jq

      - name: Run container tests
        run: |
          bats tests/container/

      - name: Run CLI tests
        run: |
          bats tests/cli/

      - name: Run script tests
        run: |
          bats tests/scripts/

      - name: Run proxy functionality tests
        run: |
          bats tests/proxy/

      - name: Run security tests
        run: |
          bats tests/security/

      - name: Cleanup test image
        if: always()
        run: |
          docker rmi squid-proxy:latest || true